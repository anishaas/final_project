
@{
    ViewBag.Title = "SandBox1";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title id="pageTitle"></title>
    <!--@Html.Partial(@Url.Content("~/Views/SandBoxViews/userViewHeader.cshtml"))-->
    <link type="text/css" rel="stylesheet" href="../../MaterialDesignAssets/css/theme-default/libs/select2/select2.css?1424887856" />
    <link type="text/css" rel="stylesheet" href="../../MaterialDesignAssets/css/theme-default/libs/multi-select/multi-select.css?1424887857" />
</head>
<body class="menubar-hoverable header-fixed menubar-pin ">
    <!-- BEGIN BASE-->
    <div id="base">

        <!-- BEGIN OFFCANVAS LEFT -->
        <div class="offcanvas">
        </div><!--end .offcanvas-->
        <!-- END OFFCANVAS LEFT -->
        <!-- BEGIN CONTENT-->
        <div id="content">
            <section>
                <div class="row">
                    <div class="col-lg-12">
                        <h1 class="text-primary">My Music</h1>
                    </div><!--end .col -->
                    <div class="col-lg-8">
                        <article class="margin-bottom-xxl">
                            <p class="lead">
                                View your collection...
                            </p>
                        </article>
                    </div><!--end .col -->
                </div><!--end .row -->
                <!-- BEGIN DATATABLE 1 -->
                <div class="row">
                    <div class="col-lg-12">
                        <div class="table-responsive">
                            <table id="datatable1" class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Song Title</th>
                                        <th>Song Artist</th>
                                        <th>Genres</th>
                                        <th>Album (If purchased)</th>
                                    </tr>
                                </thead>
                                <tbody id="dataContainer">
                                   
                                </tbody>
                            </table>
                        </div><!--end .table-responsive -->
                    </div><!--end .col -->
                </div><!--end .row -->
                <!-- END DATATABLE 1 -->
        </section>
        </div><!--end #content-->
        <!-- END CONTENT -->
        <div id="htmlComponentsContainer" style="display:none;">
            @Html.Partial(@Url.Content("~/Views/SandBoxViews/userViewHTMLComponents.cshtml"))
        </div>
    </div><!--end #base-->
    <!-- END BASE -->
    <!-- BEGIN JAVASCRIPT -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script>
        //I'll need to create an array for the song details.
        //Then I will need to create an array for the albums purchased
        //From there, I will need to make a comparison between the songs to see if any of
        //the songs have album attributes that match the album array.
        //I will need to create a final array of objects that hold 
        //SongTitle, SongArtist, GenreString, Album, and AlbumPurchased
        //PF


        $.post('/transactionsAjax/getOrderHistory')
        .done(function (data) {

            var songArray = [];
            var albumArray = [];

            var orderHistoryObject = JSON.parse(data);
            $.each(orderHistoryObject, function (i, item) {
                
                var orderDetailsObject = JSON.parse(item.UserActivityInputArg3);

                $.each(orderDetailsObject.songItems, function (i, item) {
                    var songObject = {};
                    songObject.songTitle = item.songTitle;
                    songObject.songArtist = item.songArtist;
                    songObject.genreString = item.songGenres;
                    songObject.albumString = item.songAlbum;
                    songObject.albumPurchased = 'false';
            
                    songArray.push(songObject);
                });

                $.each(orderDetailsObject.albumItems, function (i, item) {
                    albumArray.push(item.albumTitle.trim());
                });


                //Compare the 2 arrays
                songArray.forEach(function (currentValue, index1) {

                    var albumString = currentValue.albumString;
                    if (typeof albumString !== "undefined") {
                        
                        var albumNameArray = albumString.split(",");
                        albumNameArray.forEach(function (currentValue, index) {
                            if ($.inArray(currentValue.trim(), albumArray) != -1) {
                                songArray[index1].albumPurchased = 'true';
                            }
                        });
                    }
                });
                
            });

            $('#datatable1').dataTable().fnDestroy();
            $('#datatable1').empty();

            var dataTable = $('#datatable1').DataTable({
                "dom": 'lCfrtip',
                "order": [],
                "columns": [
                { "title": "Song Title", "targets": 0 },
                { "title": "Song Artists", "targets": 0 },
                { "title": "Genres", "targets": 0 },
                { "title": "Album (If purchased)", "targets": 0 }
                ],
                "colVis": {
                    "buttonText": "Columns",
                    "overlayFade": 0,
                    "align": "right"
                },
                "language": {
                    "lengthMenu": '_MENU_ entries per page',
                    "search": '<i class="fa fa-search"></i>',
                    "paginate": {
                        "previous": '<i class="fa fa-angle-left"></i>',
                        "next": '<i class="fa fa-angle-right"></i>'
                    }
                }
            });


            $('#datatable1 tbody').on('click', 'tr', function () {
                $(this).toggleClass('selected');
            });
            songArray.forEach(function (currentValue, index) {
                if (currentValue.albumPurchased == 'true') {
                    dataTable.row.add([currentValue.songTitle, currentValue.songArtist, currentValue.genreString, currentValue.albumString]).draw();
                } else {
                    dataTable.row.add([currentValue.songTitle, currentValue.songArtist, currentValue.genreString, 'Album not purchased']).draw();
                }
           });
        });

        
    </script>
    <!-- END JAVASCRIPT -->
    
</body>
</html>


